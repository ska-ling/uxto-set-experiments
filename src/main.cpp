#include <fmt/core.h>

#include <utxo/common.hpp>



// int main(int argc, char** argv) {

//     // std::string_view const path = "/home/fernando/dev/blocks-raw";
//     std::string_view const path = "/mnt/ssd/blocks-raw";

//     size_t total_inputs;
//     size_t total_outputs;
//     size_t partial_inputs;
//     size_t partial_outputs;

//     process(path,
//         [&](auto const& tx_hashes, auto&& txs) {
//             fmt::print("txs.size() = {}\n", txs.size());
//             fmt::print("do something with txs\n");
//         },
//         [&]() {
//             fmt::print("post processing\n");
//         },
//         total_inputs, total_outputs, partial_inputs, partial_outputs);

//     fmt::print("Total inputs:    {}\n", total_inputs);
//     fmt::print("Total outputs:   {}\n", total_outputs);
//     fmt::print("Partial Inputs:  {:7}\n", partial_inputs);
//     fmt::print("Partial Outputs: {:7}\n", partial_outputs);

//     return 0;
// }


// Test parsing of block # 168502

int main() {
    constexpr size_t block_idx = 168502;
    std::string block_hex = "";
    auto const block_data = hex2vec(block_hex.data(), block_hex.size());

    std::string message = fmt::format("before parsing block - block {}", block_idx);
    print_memory_usage(message);
    fmt::print("block size: {}\n", block_data.size());

    kth::domain::chain::block blk;
    kth::domain::entity_from_data(blk, block_data);
    message = fmt::format(" after parsing block - block {}", block_idx);
    print_memory_usage(message);
    auto const valid = blk.is_valid();

    if ( ! valid) {
        // Should not happen
        fmt::print("****** INVALID BLOCK ******\n");
        std::terminate();
    }

    fmt::print("block is valid - tx count: {}\n", blk.transactions().size());

}

